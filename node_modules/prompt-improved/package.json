{
  "name": "prompt-improved",
  "version": "0.1.10",
  "description": "Prompts for beautiful and configurable CLI interfaces",
  "main": "lib/index.js",
  "scripts": {
    "test": "node_modules/istanbul/lib/cli.js test node_modules/mocha/bin/_mocha --dir test/coverage"
  },
  "repository": "",
  "author": {
    "name": "Wes Todd"
  },
  "license": "BSD",
  "dependencies": {
    "read": "~1.0.4",
    "chalk": "~0.2.1"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "mocha": "~1.13.0",
    "istanbul": "~0.1.44",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-contrib-connect": "~0.5.0"
  },
  "readme": "# Prompts Improved\n\nNode.js prompts like you always wanted.  Style them to your heart's content using [Chalk](https://github.com/sindresorhus/chalk), an amazing CLI package for colors and text styling.  Features include:\n\n- Default options\n- Boolean questions *(simple y/n answers get converted to true/false)*\n- Input validation *(using regex's or functions)*\n- Input filters *(both before validation and after)*\n- Required fields\n- Input attempt limits *(think limiting password tries)*\n- Ask single or multiple questions\n- When asking multiple questions, subsequent questions can be dependant on previous input.  Allows for simple logic in prompt path.\n- Configurable prefixs and suffixes\n- Override defaults at runtime (`overrideDefaults: {key: value}`)\n- Custom error messaging\n- Confirmation prompt for input of multiple questions\n- Input timeouts\n- Per-prompt configuration\n- Convient error handeling\n- **(Coming Soon)** Multiple choice questions\n\n# Examples\n\nJust ask your user a question:\n\n```javascript\nvar Prompt = require('prompt-imporved');\n\nvar prompt = new Prompt({\n\t// Some options for all prompts\n\tprefix: '[?] ',\n\tprefixTheme: Prompt.chalk.green\n});\n\nprompt.ask('Where in the world is Carmen Sandiego?', function(err, res) {\n\tif (err) return console.error(err); // err is null if no errors\n\tconsole.log('Response: ' + res);\n});\n\n// Outputs: [?] Where in the world is Carmen Sandiego?: \n```\n\nOptions can be provided for all prompts or overridden on a per-prompt basis:\n\n```javascript\nvar Prompt = require('prompt-imporved');\n\nvar prompt = new Prompt({\n\tsuffix: '? '\n});\n\nprompt.ask('How is your day going beautiful', function(err, res) {\n\tif (err) return console.error(err);\n\tconsole.log('Response: ' + res);\n});\n\n// Outputs: How is your day going beautiful?  \n```\n\nAsking multiple questions:\n\n```javascript\nvar Prompt = require('prompt-imporved');\nvar prompt = new Prompt();\nprompt.ask([{\n\tquestion: 'Who\\'s your daddy?',\n\tkey: 'father',\n}, {\n\tquestion: 'What is your Mothers name?',\n}], function(err, res) {\n\tif (err) return console.error(err);\n\tconsole.log('Father\\'s name: ' res.father);\n\tconsole.log('Mother\\'s name: ' res['What is your Mothers name?']);\n});\n```\n\nFull example will all options:\n\n```javascript\nvar Prompt = require('prompt-imporved');\n\n// These are all the defaults\nvar prompt = new Prompt({\n\tprefix        : '',\n\tsuffix        : ': ',\n\tdefaultPrefix : ' (',\n\tdefaultSuffix : ')',\n\ttextTheme     : Prompt.chalk.bold,\n\tprefixTheme   : Prompt.chalk.white,\n\tsuffixTheme   : Prompt.chalk.white,\n\tdefaultTheme  : Prompt.chalk.white,\n\tinputError    : 'Error encountered, try again.',\n\trequiredError : 'Required! Try again.',\n\tinvalidError  : 'Invalid input: ',\n\tattemptsError : 'Maximum attempts reached!',\n\tstdin         : process.stdin,\n\tstdout        : process.stdout,\n\tstderr        : process.stderr,\n\ttimeout       : null\n});\n\n// Each question can have it's own options\nprompt.ask([{\n\tquestion: 'A yes or no question',\n\tkey: 'answer-key',\n\tattempts: 3,\n\trequired: true,\n\tdefault: 'Y',\n\tboolean: true\n}{\n\tquestion: 'Something where the first letter should be uppercase',\n\tkey: 'answer-key1',\n\tbefore: function(val) {\n\t\treturn val.charAt(0).toUpperCase() + val.slice(1);\n\t},\n\tdepends: function(answers) {\n\t\treturn !!answers['answer-key'];\n\t}\n}], function(err, res) {\n\tif (err) return console.error(err);\n\tconsole.log('Response: ' + res);\n});\n```\n\n# Tests\n\nUnit tests and test coverage are available:\n\n```\n// runs the tests and watches for file changes\n$ grunt \n\n// Runs the coverage generator and opens your borwser to the results\n$ grunt coverage\n```\n\n# Contributions\n\nPlease contribute.  Make pull requests against the develop branch.\n",
  "readmeFilename": "README.md",
  "_id": "prompt-improved@0.1.10",
  "dist": {
    "shasum": "e49612737f64911f365927155256c48646cf1f1b",
    "tarball": "http://registry.npmjs.org/prompt-improved/-/prompt-improved-0.1.10.tgz"
  },
  "_from": "prompt-improved@0.1.x",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "wesleytodd",
    "email": "wes@wesleytodd.com"
  },
  "maintainers": [
    {
      "name": "wesleytodd",
      "email": "wes@wesleytodd.com"
    }
  ],
  "directories": {},
  "_shasum": "e49612737f64911f365927155256c48646cf1f1b",
  "_resolved": "https://registry.npmjs.org/prompt-improved/-/prompt-improved-0.1.10.tgz"
}
